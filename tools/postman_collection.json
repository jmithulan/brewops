{
  "info": {
    "name": "BrewOps API Collection",
    "description": "Complete API test collection for BrewOps Tea Factory Management System",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4323",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "supplier_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Admin\",\n  \"email\": \"admin@brewops.com\",\n  \"password\": \"password123\",\n  \"role\": \"manager\",\n  \"phone\": \"0712345678\",\n  \"employeeId\": \"ADM001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.test('User registered successfully', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.user).to.have.property('id');",
                  "        pm.collectionVariables.set('user_id', response.user.id);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@brewops.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.jwtToken).to.exist;",
                  "        pm.collectionVariables.set('jwt_token', response.jwtToken);",
                  "        pm.collectionVariables.set('user_id', response.user.id);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/user",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "user"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get user successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Admin Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/admin/users?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get users successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.users).to.be.an('array');",
                  "    pm.expect(response.pagination).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Staff\",\n  \"email\": \"staff@brewops.com\",\n  \"password\": \"password123\",\n  \"role\": \"staff\",\n  \"phone\": \"0712345679\",\n  \"employee_id\": \"STF001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/users",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create user successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.user).to.have.property('id');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Staff Name\",\n  \"phone\": \"0712345680\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users", "{{user_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update user successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"oldPassword\": \"password123\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/users/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users", "change-password"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Change password successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"inactive\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/users/{{user_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users", "{{user_id}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update status successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Supplier Management",
      "item": [
        {
          "name": "Get All Suppliers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/suppliers?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "suppliers"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get suppliers successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.suppliers).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Supplier",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"supplier_name\": \"Test Supplier\",\n  \"contact_person\": \"John Doe\",\n  \"phone\": \"0712345681\",\n  \"email\": \"supplier@brewops.com\",\n  \"address\": \"123 Tea Street, Colombo\",\n  \"payment_preferences\": \"bank_transfer\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/suppliers",
              "host": ["{{base_url}}"],
              "path": ["api", "suppliers"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Create supplier successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.supplier).to.have.property('id');",
                  "        pm.collectionVariables.set('supplier_id', response.supplier.id);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Assign Request to Supplier",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product\": \"Premium Green Tea\",\n  \"quantity\": 100.5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/supplier-requests/suppliers/{{supplier_id}}/assign",
              "host": ["{{base_url}}"],
              "path": ["api", "supplier-requests", "suppliers", "{{supplier_id}}", "assign"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Assign request successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.request).to.have.property('id');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Inventory Management",
      "item": [
        {
          "name": "Get All Inventory",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/inventory",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get inventory successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.inventories).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Inventory Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quality_id\": 1,\n  \"weight_kg\": 50.0,\n  \"received_date\": \"2025-01-21\",\n  \"location\": \"Warehouse A\",\n  \"status\": \"fresh\",\n  \"notes\": \"High quality tea leaves\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/inventory",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create inventory successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Payment Management",
      "item": [
        {
          "name": "Get All Payments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/payments?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "payments"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get payments successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.payments).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"supplier_id\": 1,\n  \"amount\": 15000.00,\n  \"payment_date\": \"2025-01-21\",\n  \"payment_method\": \"bank_transfer\",\n  \"reference_number\": \"TXN001\",\n  \"notes\": \"Payment for tea delivery\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/payments",
              "host": ["{{base_url}}"],
              "path": ["api", "payments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create payment successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Reports & Backup",
      "item": [
        {
          "name": "Generate Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"inventory\",\n  \"from\": \"2025-01-01\",\n  \"to\": \"2025-01-31\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reports/generate",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "generate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Generate report successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.report).to.have.property('downloadUrl');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Database Backup",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/admin/backup",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "backup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create backup successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.backup).to.have.property('filename');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List Backups",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/admin/backups?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "backups"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('List backups successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.backups).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "API Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health check successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.message).to.include('BrewOps API is running');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}

